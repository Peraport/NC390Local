@using Nop.Web.Framework.Kendoui
@using FoxNetSoft.Plugin.Misc.DiscountOrder.Models
@using Nop.Core.Infrastructure
@using Nop.Web.Framework
@using FoxNetSoft.Plugin.Misc.DiscountOrder.Services
@using Nop.Services.Stores
@using Nop.Web.Framework.UI

@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";
    //page title
    ViewBag.Title = T("Admin.FoxNetSoft.Plugin.Misc.DiscountOrder.Caption").Text;

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
    Html.SetActiveMenuItemSystemName("FoxNetSoft.DiscountOrder.List");
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "discountorderproduct-form" }))
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.FoxNetSoft.Plugin.Misc.DiscountOrder.Caption")
        </h1>
    </div>
    <script>
        var allStores = [
                        {
                            Id : "0",
                            Name : "@T("Common.All")"
        }
                        @{
        var stores = EngineContext.Current.Resolve<IStoreService>().GetAllStores();
        }
                            @foreach (var store in stores)
        {
            <text>
                , {
            Id: @store.Id,
            Name: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(store.Name)))"
        }
        </text>
        }
        ];
    </script>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="discountorderproduct-grid"></div>
                        <script>
                            $(document).ready(function () {
                                $("#discountorderproduct-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("DiscountOrderProductList", "DiscountOrderProduct", new RouteValueDictionary { { "area", "Admin" }}))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            update: {
                                                url:"@Html.Raw(Url.Action("DiscountOrderProductUpdate", "DiscountOrderProduct", new RouteValueDictionary { { "area", "Admin" } }))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            destroy: {
                                                url: "@Html.Raw(Url.Action("DiscountOrderProductDelete", "DiscountOrderProduct", new RouteValueDictionary { { "area", "Admin" } }))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    StoreId: { editable: true, type: "number" },
                                                    Store: { editable: true, type: "string" },
                                                    ProductName: {editable: false, type: "string" },
                                                    ProductId: {editable: false, type: "number" },
                                                    CreatedOn: { editable: false, type: "date" }
                                                }
                                            }
                                        },
                                        requestEnd: function(e) {
                                            if(e.type=="update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: false,
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [{
                                        field: "Store",
                                        title: "@T("Admin.FoxNetSoft.Plugin.Misc.DiscountOrder.Field.DiscountOrderProduct.Store")",
                                        width: 200,
                                        editor: feedStoreDropDownEditor,
                                        template: "#:Store#"
                                    },{
                                        field: "ProductName",
                                        title: "@T("Admin.FoxNetSoft.Plugin.Misc.DiscountOrder.Field.DiscountOrderProduct.Product")",
                                        template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">#=ProductName#</a>'
                                    },{
                                        field: "CreatedOn",
                                        title: "@T("Admin.FoxNetSoft.Plugin.Misc.DiscountOrder.Field.DiscountOrderProduct.CreatedOn")",
                                        width: 200,
                                        type: "date",
                                        format: "{0:G}"
                                    },{
                                        command: [{
                                            name: "edit",
                                            text: "@T("Admin.Common.Edit")"
                                        },{
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                        }],
                                        width: 200
                                    }]
                                });
                            });

                            function feedStoreDropDownEditor(container, options) {
                                $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:StoreId"/>')
                                    .appendTo(container)
                                    .kendoDropDownList({
                                        autoBind: false,
                                        dataSource: allStores
                                    });
                            }
                        </script>

                    </div>

                    <div class="panel-footer">
                        <button type="submit" id="btnAddNewProduct"
                                onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "DiscountOrderProduct", new {btnId = "btnRefreshProducts", formId = "discountorderproduct-form", area = "Admin"}))', 800, 800, true); return false;"
                                class="btn btn-primary">
                            @T("Admin.Catalog.Categories.Products.AddNew")
                        </button>
                        <input type="submit" id="btnRefreshProducts" style="display: none" />
                        <script type="text/javascript">
                        $(document).ready(function () {
                            $('#btnRefreshProducts').click(function () {
                                //refresh grid
                                var grid = $("#discountorderproduct-grid").data('kendoGrid');
                                grid.dataSource.read();

                                //return false to don't reload a page
                                return false;
                            });
                        });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
 }
