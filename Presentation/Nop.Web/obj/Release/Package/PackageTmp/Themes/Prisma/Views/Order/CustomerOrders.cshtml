@model CustomerOrderListModel
@{
    //Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@*@section left
    {
        @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
    }*@

@{
    Layout = "~/Views/Shared/_PeraLayout.cshtml";
}
@section left
{
    @Html.Action("PeraLeftMenu", "Fi")
}

<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                @using (Html.BeginForm())
                {
                    var canRetryRecurringOrders = Model.RecurringOrders.Any(recurring => recurring.CanRetryLastPayment);

                @Html.AntiForgeryToken()
                <div class="table-wrapper">
                    <table class="data-table">
                        <colgroup>
                            <col width="1" />
                            <col />
                            <col />
                            <col />
                            <col />
                            <col />
                            <col />
                            @if (canRetryRecurringOrders)
                                {
                                <col /> }
                            <col />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>
                                    <span class="item-count">#</span>
                                </th>
                                <th class="start-date" data-hide="w410, w480, w580">
                                    @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                </th>
                                <th class="cycle-info" data-hide="w410, w480, w580, w768, w980">
                                    @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                </th>
                                <th class="next-payment">
                                    @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                </th>
                                <th class="total-cycles" data-hide="w410, w480, w580, w768, w980">
                                    @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                </th>
                                <th class="cycles-remaining" data-hide="w410, w480, w580, w768, w980">
                                    @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                </th>
                                <th class="initial-order" data-hide="w410, w480, w580, w768">
                                    @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                </th>
                                @if (canRetryRecurringOrders)
                                    {
                                    <th class="retry">
                                        @T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")
                                    </th>
                                    }
                                <th class="cancel">
                                    @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{var counter = 0;}
                            @foreach (var item in Model.RecurringOrders)
                                {
                                    counter++;
                                <tr>
                                    <td>
                                        <span class="item-count">@counter</span>
                                    </td>
                                    <td class="start-date">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.StartDate")</label>
                                        @item.StartDate
                                    </td>
                                    <td class="cycle-info">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.CycleInfo")</label>
                                        @item.CycleInfo
                                    </td>
                                    <td class="next-payment">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.NextPayment")</label>
                                        @item.NextPayment
                                    </td>
                                    <td class="total-cycles">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.TotalCycles")</label>
                                        @item.TotalCycles
                                    </td>
                                    <td class="cycles-remaining">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")</label>
                                        @item.CyclesRemaining
                                    </td>
                                    <td class="initial-order">
                                        <label>@T("Account.CustomerOrders.RecurringOrders.InitialOrder")</label>
                                        <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderNumber)</a>
                                    </td>
                                    @if (canRetryRecurringOrders)
                                        {
                                        <td class="retry">
                                            @if (item.CanRetryLastPayment)
                                                {
                                                <label>@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")</label>
                                                <input type="submit" name="retryLastPayment_@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")" class="button-2 retry-recurring-order-button" />
                                                }
                                        </td>
                                        }
                                    <td class="cancel">
                                        @if (item.CanCancel)
                                            {
                                            <label>@T("Account.CustomerOrders.RecurringOrders.Cancel")</label>
                                            <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                            }
                                    </td>
                                </tr>
                                }
                        </tbody>
                    </table>
                </div>
                                    }
            </div>
                                if (Model.RecurringPaymentErrors.Any())
                                {
                                    <div class="message-error">
                                        <ul>
                                            @foreach (var error in Model.RecurringPaymentErrors)
                                            {
                                                <li>@error</li>
                                            }
                                        </ul>
                                    </div>
                                    }
                                }

        @if (Model.Orders.Count > 0)
        {
            <div class="order-list">
                <h3>SİPARİŞLERİM </h3>
                <table class="data-table">
                    <thead>
                        <tr>
                            <td>@T("Account.CustomerOrders.OrderNumber")</td>
                            <td>@T("Account.CustomerOrders.OrderStatus")</td>
                            <td>@T("Account.CustomerOrders.OrderDate")</td>
                            <td>@T("Account.CustomerOrders.OrderTotal")</td>
                            <td>Detay</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td><strong>@order.CustomOrderNumber</strong></td>
                                <td><span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span></td>
                                <td><span class="order-date">@order.CreatedOn.ToString()</span></td>
                                <td><span class="order-total">@order.OrderTotal</span></td>
                                <td>
                                    <button type="button" 
                                            style="background-color:red;border-radius: 6px;border: 1px solid #4b8f29;display: inline-block;
font-family: Arial;
        font-weight: bold;
        text-decoration: none;color: #ffffff;width: 45px;
    height: 44px;    content: '\e900';
    font-size: 12px;" 
                                            onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')">0</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerOrders.NoOrders")
            </div>
        }
    </div>
</div>