@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOneLogin.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}
<style>
    /* jssor slider loading skin spin css */
    .jssorl-009-spin img {
        animation-name: jssorl-009-spin;
        animation-duration: 1.6s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
    }

    @@keyframes jssorl-009-spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }
</style>

<div class="page login-page">
    <div class="page-title">
        <img src="http://bayi.a321.com.tr/a321logo.png" width="1200" height="90" />
    </div>
    <div class="page-title">
        <h1>@T("Account.Login.Welcome")</h1>
    </div>
    @Html.Partial("_ExternalAuthentication.AssociateMessage")
    @Html.Partial("_ExternalAuthentication.Errors")
    <div class="page-body">
        <div class="customer-blocks">
            <div class="returning-wrapper fieldset">
                @using (Html.BeginForm())
                {
                    var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                    <div class="title">
                        <strong>@T("Account.Login.ReturningCustomer")</strong>
                    </div>
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="form-fields">
                        @if (Model.UsernamesEnabled)
                        {
                            <div class="inputs">
                                @Html.LabelFor(m => m.Username, new { }, ":")
                                @Html.TextBoxFor(m => m.Username, new { @class = "username", autofocus = "autofocus" })
                                @Html.ValidationMessageFor(m => m.Username)
                            </div>
                        }
                        else
                        {
                            <div class="inputs">
                                @Html.LabelFor(m => m.Email, new { }, ":")
                                @Html.TextBoxFor(m => m.Email, new { @class = "email", autofocus = "autofocus" })
                                @Html.ValidationMessageFor(m => m.Email)
                            </div>
                        }
                        <div class="inputs">
                            @Html.LabelFor(m => m.Password, new { }, ":")
                            @Html.PasswordFor(m => m.Password, new { @class = "password" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                        <div class="inputs reversed">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                            @*<span class="forgot-password">
                                    @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
                                </span>*@
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                    <div class="buttons">
                        <input class="button-1 login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                    </div>
                }
            </div>
            <div style="background-color:aqua">
                @*                @Html.Action("TopicBlock", "Topic", new { systemName = "LoginRegistrationInfo" })*@
                @*@Html.Widget("home_page_before_poll")*@


                <!-- Use a container to wrap the slider, the purpose is to enable slider to always fit width of the wrapper while window resize -->
                <div class="containerx">
                    <!-- Jssor Slider Begin -->
                    <!-- Bootstrap core CSS -->
                    <link href="~/sld/bootstrap.min.css" rel="stylesheet" />
                    <div class="col-sm-4">
                        <br />
                        <div id="slider1_container" style="visibility: hidden; position: relative; margin: 0 auto; width: 420px; height: 350px; overflow: hidden;">
                            <!-- Loading Screen -->
                            <div data-u="loading" class="jssorl-009-spin" style="position:absolute;top:0px;left:0px;width:100%;height:100%;text-align:center;background-color:rgba(0,0,0,0.7);">
                                <img style="margin-top:-19px;position:relative;top:50%;width:38px;height:38px;" src="spin.svg" />
                            </div>

                            <!-- Slides Container -->
                            <div data-u="slides" style="position: absolute; left: 0px; top: 0px; width: 1140px; height: 1000px; overflow: hidden;">
                                <div>
                                    <img data-u="image" src="~/sld/001.jpg" />
                                </div>
                                <div>
                                    <img data-u="image" src="~/sld/002.jpg" />
                                </div>
                                <div>
                                    <img data-u="image" src="~/sld/003.jpg" />
                                </div>
                                <div>
                                    <img data-u="image" src="~/sld/004.jpg" />
                                </div>
                            </div>

                            <!--#region Bullet Navigator Skin Begin -->
                            <style>
                                .jssorb031 {
                                    position: absolute;
                                }

                                    .jssorb031 .i {
                                        position: absolute;
                                        cursor: pointer;
                                    }

                                        .jssorb031 .i .b {
                                            fill: #000;
                                            fill-opacity: 0.5;
                                            stroke: #fff;
                                            stroke-width: 1200;
                                            stroke-miterlimit: 10;
                                            stroke-opacity: 0.3;
                                        }

                                        .jssorb031 .i:hover .b {
                                            fill: #fff;
                                            fill-opacity: .7;
                                            stroke: #000;
                                            stroke-opacity: .5;
                                        }

                                    .jssorb031 .iav .b {
                                        fill: #fff;
                                        stroke: #000;
                                        fill-opacity: 1;
                                    }

                                    .jssorb031 .i.idn {
                                        opacity: .3;
                                    }
                            </style>
                            <div data-u="navigator" class="jssorb031" style="position:absolute;bottom:12px;right:12px;" data-autocenter="1" data-scale="0.5" data-scale-bottom="0.75">
                                <div data-u="prototype" class="i" style="width:16px;height:16px;">
                                    <svg viewBox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                        <circle class="b" cx="8000" cy="8000" r="5800"></circle>
                                    </svg>
                                </div>
                            </div>
                            <!--#endregion Bullet Navigator Skin End -->
                            <!--#region Arrow Navigator Skin Begin -->
                            <style>
                                .jssora051 {
                                    display: block;
                                    position: absolute;
                                    cursor: pointer;
                                }

                                    .jssora051 .a {
                                        fill: none;
                                        stroke: #fff;
                                        stroke-width: 360;
                                        stroke-miterlimit: 10;
                                    }

                                    .jssora051:hover {
                                        opacity: .8;
                                    }

                                    .jssora051.jssora051dn {
                                        opacity: .5;
                                    }

                                    .jssora051.jssora051ds {
                                        opacity: .3;
                                        pointer-events: none;
                                    }
                            </style>
                            <div data-u="arrowleft" class="jssora051" style="width:55px;height:55px;top:0px;left:25px;" data-autocenter="2" data-scale="0.75" data-scale-left="0.75">
                                <svg viewBox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                    <polyline class="a" points="11040,1920 4960,8000 11040,14080 "></polyline>
                                </svg>
                            </div>
                            <div data-u="arrowright" class="jssora051" style="width:55px;height:55px;top:0px;right:25px;" data-autocenter="2" data-scale="0.75" data-scale-right="0.75">
                                <svg viewBox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                    <polyline class="a" points="4960,1920 11040,8000 4960,14080 "></polyline>
                                </svg>
                            </div>
                            <!--#endregion Arrow Navigator Skin End -->
                        </div>
                        <!-- Jssor Slider End -->
                    </div>
                </div><!-- /.container -->
                <!-- Bootstrap core JavaScript
                ================================================== -->
                <!-- Placed at the end of the document so the pages load faster -->
                <script src="~/sld/jquery-1.9.1.min.js"></script>
                <script src="~/sld/bootstrap.min.js"></script>
                <script src="~/sld/docs.min.js"></script>
                <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
                <script src="~/sld/ie10-viewport-bug-workaround.js"></script>

                <!-- jssor slider scripts-->
                <script type="text/javascript" src="~/sld/jssor.slider.min.js"></script>
                <script>

        jQuery(document).ready(function ($) {
            var options = {
                $AutoPlay: 1,                                       //[Optional] Auto play or not, to enable slideshow, this option must be set to greater than 0. Default value is 0. 0: no auto play, 1: continuously, 2: stop at last slide, 4: stop on click, 8: stop on user navigation (by arrow/bullet/thumbnail/drag/arrow key navigation)
                $AutoPlaySteps: 1,                                  //[Optional] Steps to go for each navigation request (this options applys only when slideshow disabled), the default value is 1
                $Idle: 2000,                                        //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
                $PauseOnHover: 1,                                   //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1

                $ArrowKeyNavigation: 1,   			                //[Optional] Steps to go for each navigation request by pressing arrow key, default value is 1.
                $SlideEasing: $Jease$.$OutQuint,                    //[Optional] Specifies easing for right to left animation, default value is $Jease$.$OutQuad
                $SlideDuration: 800,                                //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
                $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide, default value is 20
                //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
                //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
                $SlideSpacing: 0, 					                //[Optional] Space between each slide in pixels, default value is 0
                $Align: 0,                                          //[Optional] The offset position to park slide (if this option is not 0, slideshow will be disabled), if this value is not set, it will auto center current slide at center of the carousel.
                $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
                $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
                $DragOrientation: 1,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $Cols is greater than 1, or parking position is not 0)

                $ArrowNavigatorOptions: {                           //[Optional] Options to specify and enable arrow navigator or not
                    $Class: $JssorArrowNavigator$,                  //[Requried] Class to create arrow navigator instance
                    $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                    $Steps: 1                                       //[Optional] Steps to go for each navigation request, default value is 1
                },

                $BulletNavigatorOptions: {                          //[Optional] Options to specify and enable navigator or not
                    $Class: $JssorBulletNavigator$,                 //[Required] Class to create navigator instance
                    $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
                    $Steps: 1,                                      //[Optional] Steps to go for each navigation request, default value is 1
                    $Rows: 1,                                       //[Optional] Specify rows to arrange items, default value is 1
                    $SpacingX: 12,                                  //[Optional] Horizontal space between each item in pixel, default value is 0
                    $SpacingY: 4,                                   //[Optional] Vertical space between each item in pixel, default value is 0
                    $Orientation: 1                                 //[Optional] The orientation of the navigator, 1 horizontal, 2 vertical, default value is 1
                }
            };

            var jssor_slider1 = new $JssorSlider$("slider1_container", options);

            //responsive code begin
            //you can remove responsive code if you don't want the slider scales while window resizing
            function ScaleSlider() {
                var parentWidth = jssor_slider1.$Elmt.parentNode.clientWidth;
                if (parentWidth) {
                    jssor_slider1.$ScaleWidth(parentWidth - 30);
                }
                else
                    window.setTimeout(ScaleSlider, 30);
            }
            ScaleSlider();

            $(window).bind("load", ScaleSlider);
            $(window).bind("resize", ScaleSlider);
            $(window).bind("orientationchange", ScaleSlider);
            //responsive code end
        });
                </script>



                @*<br>
                    <br>
                    <p><strong>Bilgilendirme</strong></p>
                    <br>
                    <p>- Eğer kullanıcı adı ve şifreniz yoksa lütfen bizi arayınız...</p>
                    <br>
                    <br>
                    <p>- Eğer kullanıcı adı ve şifreniz yoksa lütfen bizi arayınız...</p>
                    <br>
                    <br>
                    <p>- Eğer kullanıcı adı ve şifreniz yoksa lütfen bizi arayınız...</p>
                    <br>
                    <br>
                    <p>- Eğer kullanıcı adı ve şifreniz yoksa lütfen bizi arayınız...</p>
                    <br>
                    <br>*@
            </div>
            @*@if (Model.CheckoutAsGuest)
                {
                    <div class="new-wrapper checkout-as-guest-or-register-block">
                        <div class="title">
                            <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                        </div>
                        <div class="text">
                            @Html.Action("TopicBlock", "Topic", new { systemName = "CheckoutAsGuestOrRegister" })
                        </div>
                        <div class="buttons">
                            <input type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                            <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="new-wrapper register-block">
                        <div class="title">
                            <strong>@T("Account.Login.NewCustomer")</strong>
                        </div>
                        <div class="text">
                            @T("Account.Login.NewCustomerText")
                        </div>
                        <div class="buttons">
                            <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                }*@
        </div>
        <div class="external-authentication">
            @Html.Action("ExternalMethods", "ExternalAuthentication")
        </div>

    </div>
</div>
