//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nop.Plugin.Peraport.WidgetFinancial.PronistServicex {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PronistServicex.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InvoiceList", ReplyAction="http://tempuri.org/IService/InvoiceListResponse")]
        Nop.Web.PronistService.ParametersInvoiceList[] InvoiceList(string Apikey, string CustomerCode, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InvoiceList", ReplyAction="http://tempuri.org/IService/InvoiceListResponse")]
        System.Threading.Tasks.Task<Nop.Web.PronistService.ParametersInvoiceList[]> InvoiceListAsync(string Apikey, string CustomerCode, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InvoiceByte", ReplyAction="http://tempuri.org/IService/InvoiceByteResponse")]
        Nop.Web.PronistService.ParametersInvoiceByte InvoiceByte(string Apikey, string InvoiceId, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InvoiceByte", ReplyAction="http://tempuri.org/IService/InvoiceByteResponse")]
        System.Threading.Tasks.Task<Nop.Web.PronistService.ParametersInvoiceByte> InvoiceByteAsync(string Apikey, string InvoiceId, string ipAddress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Nop.Plugin.Peraport.WidgetFinancial.PronistServicex.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Nop.Plugin.Peraport.WidgetFinancial.PronistServicex.IService>, Nop.Plugin.Peraport.WidgetFinancial.PronistServicex.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Nop.Web.PronistService.ParametersInvoiceList[] InvoiceList(string Apikey, string CustomerCode, string ipAddress) {
            return base.Channel.InvoiceList(Apikey, CustomerCode, ipAddress);
        }
        
        public System.Threading.Tasks.Task<Nop.Web.PronistService.ParametersInvoiceList[]> InvoiceListAsync(string Apikey, string CustomerCode, string ipAddress) {
            return base.Channel.InvoiceListAsync(Apikey, CustomerCode, ipAddress);
        }
        
        public Nop.Web.PronistService.ParametersInvoiceByte InvoiceByte(string Apikey, string InvoiceId, string ipAddress) {
            return base.Channel.InvoiceByte(Apikey, InvoiceId, ipAddress);
        }
        
        public System.Threading.Tasks.Task<Nop.Web.PronistService.ParametersInvoiceByte> InvoiceByteAsync(string Apikey, string InvoiceId, string ipAddress) {
            return base.Channel.InvoiceByteAsync(Apikey, InvoiceId, ipAddress);
        }
    }
}
